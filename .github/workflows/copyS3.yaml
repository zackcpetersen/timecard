name: Sync S3 Buckets

on:
  workflow_dispatch:

jobs:
  copy-s3-data:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Set up Terraform cloud
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.6.5"
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init and Apply
      run: |
        cd ./terraform/copyS3
        terraform init
        terraform apply -auto-approve

    - name: Get Terraform Output
      id: tf-output
      run: |
        cd ./terraform/copyS3
        echo "::set-output name=role_arn::$(terraform output -raw destination_migration_role)"
        echo "::set-output name=source_bucket::$(terraform output -raw source_bucket_name)"
        echo "::set-output name=destination_bucket::$(terraform output -raw destination_bucket_name)"

    - name: Assume AWS Role and Sync Buckets
      run: |
        ASSUME_ROLE=$(aws sts assume-role --role-arn "${{ steps.tf-output.outputs.role_arn }}" --role-session-name "S3SyncSession")
        export AWS_ACCESS_KEY_ID=$(echo $ASSUME_ROLE | jq -r .Credentials.AccessKeyId)
        export AWS_SECRET_ACCESS_KEY=$(echo $ASSUME_ROLE | jq -r .Credentials.SecretAccessKey)
        export AWS_SESSION_TOKEN=$(echo $ASSUME_ROLE | jq -r .Credentials.SessionToken)
        aws s3 sync s3://"${{ steps.tf-output.outputs.source_bucket }}" s3://"${{ steps.tf-output.outputs.destination_bucket }}"

  cleanup:
    needs: copy-s3-data
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Set up Terraform cloud
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.6.5"
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Destroy
      run: |
        cd ./terraform/copyS3
        terraform init
        terraform destroy -auto-approve
