name: Deploy Images to ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push-web:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Build and push web Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/prod/Dockerfile
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/timecard_web:${{ github.sha }},${{ steps.login-ecr.outputs.registry }}/timecard_web:latest


  build-and-push-nginx:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Build and push nginx Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/prod/nginx/Dockerfile
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/timecard_nginx:${{ github.sha }},${{ steps.login-ecr.outputs.registry }}/timecard_nginx:latest

